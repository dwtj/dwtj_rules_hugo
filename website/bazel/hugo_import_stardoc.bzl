'''Defines the `hugo_import_stardoc` macro.
'''

load("@dwtj_rules_hugo//hugo:defs.bzl", "hugo_import")
load("@io_bazel_stardoc//stardoc:stardoc.bzl", "stardoc")

_EMPTY_FRONT_MATTER = "---\n---"
_DEFAULT_VISIBILITY = [
    "//visibility:private",
]

def hugo_import_stardoc(
    name,
    hugo_path,
    stardoc_input,
    stardoc_out = None,
    bzl_deps = list(),
    visibility = _DEFAULT_VISIBILITY,
    add_front_matter = _EMPTY_FRONT_MATTER,
    ):
    '''Declares a `stardoc` target and wraps it in a `hugo_import` target.

    Args:
      name: Used to name the targets. Specifically, the `hugo_import` target is
        given this name exactly, and the `stardoc` target is given the name
        `<name>_stardoc`.
      hugo_path: The string passed to the `hugo_import.path` attribute.
      stardoc_input: The file passed to the `stardoc.input` attribute.
      stardoc_out: Used to explicitly set the name of the file generated by
        `stardoc` and then passed to `hugo_import`. This defaults to
        `<name>.md`.
      bzl_deps: This is passed as the `deps` attribute of the `stardoc` target.
        This defaults to the empty list.
      visibility: Both targets are the given this `visibility` value. It which
        defaults to just `//visibility:private` (i.e. package only visibility).

    Returns:
      `None`
    '''
    stardoc_target_name = name + "_stardoc"
    if stardoc_out == None:
        stardoc_out = name + ".md"

    stardoc(
        name = stardoc_target_name,
        input = stardoc_input,
        out = stardoc_out,
        deps = bzl_deps,
        visibility = visibility,
    )

    hugo_import(
        name = name,
        src = stardoc_out,
        path = hugo_path,
        add_front_matter = add_front_matter,
        visibility = visibility,
    )
