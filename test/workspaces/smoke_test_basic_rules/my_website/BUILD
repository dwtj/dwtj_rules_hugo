load(
    "@dwtj_rules_hugo//hugo:defs.bzl",
    "hugo_website",
    "hugo_library",
    "hugo_import",
)

# Tests that a simple website can be built. Notice that `foo.md` is not in the
# Bazel source tree: it is an output of the rule `:bazel_generated_content`.
hugo_website(
    name = "my_website",
    srcs = [
        "config.toml",
        "layouts/index.html",
        "foo.md",
    ],
)

# Make a markdown file with just an empty front matter. This is used for testing
# that the `hugo_website` rule can handle files generated by Bazel actions.
genrule(
    name = "bazel_generated_content",
    outs = ["foo.md"],
    cmd_bash = 'echo "---\r---\r" > "$(RULEDIR)/foo.md"'
)

# A website with `//a_different_pkg:some_{,bazel_generated_}content` as `srcs`.
# This target should *fail* because these files are not rooted under this
# package. To include such files in a `hugo_website`, they will need to be
# wrapped in another Hugo rule (e.g. `hugo_import` as shown below).
hugo_website(
    name = "my_website_with_bad_srcs",
    srcs = [
        "config.toml",
        "layouts/index.html",
        "//a_different_pkg:some_content.md",
        "//a_different_pkg:some_bazel_generated_content.md",
    ],
)

# A website with a `hugo_import` dependencies.
hugo_website(
    name = "my_website_with_hugo_imports",
    srcs = [
        "config.toml",
    ],
    deps = [
        ":four_imports",
        ":import_with_added_front_matter",
    ],
)

hugo_library(
    name = "four_imports",
    deps = [
        ":import_one",
        ":import_two",
        ":import_three",
        ":import_four",
    ],
    # NOTE(dwtj): This has public visibility so that it can be reached from a
    #  sibling test workspace, `@smoke_test_deps_in_external_repository`.
    visibility = ["//visibility:public"],
)

hugo_import(
    name = "import_one",
    src = "layouts/index.html",
    path = "layouts/index.html",
)

hugo_import(
    name = "import_two",
    src = "foo.md",
    path = "content/foo.md",
)

hugo_import(
    name = "import_three",
    src = "//a_different_pkg:some_content.md",
    path = "content/some_content.md",
)

hugo_import(
    name = "import_four",
    src = "//a_different_pkg:some_bazel_generated_content.md",
    path = "content/some_bazel_generated_content.md",
)

genrule(
    name = "bazel_generated_content_with_no_front_matter",
    outs = ["empty.md"],
    cmd_bash = 'touch "$(RULEDIR)/empty.md"'
)

_EMPTY_FRONT_MATTER = "---\n---"

hugo_import(
    name = "import_with_added_front_matter",
    src = "empty.md",
    path = "content/empty.md",
    add_front_matter = _EMPTY_FRONT_MATTER,
)
